{"version":3,"sources":["serviceWorker.js","modules/Header.js","modules/MapSelection.js","modules/SelectArea.js","modules/Help.js","modules/About.js","modules/Maps.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","react_default","a","createElement","className","Link","to","style","height","src","alt","React","Component","mapboxgl","accessToken","MapSelection","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","lng","lat","zoom","_this2","_this$state","map","Map","container","mapContainer","center","on","_map$getCenter","getCenter","setState","toFixed","getZoom","_this3","_this$state2","ref","el","concat","SelectArea","modules_MapSelection","Help","About","Maps","params","long","width","ReactDOM","render","BrowserRouter","modules_Header","Route","exact","path","process","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wPAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,0GCASC,0LAZb,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,eAAcH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAK,KAAIL,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAACC,OAAQ,IAAKC,IAAI,mBAAmBC,IAAI,mBACnGT,EAAAC,EAAAC,cAAA,OAAKC,UAAY,eAChBH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAY,iBAAiBE,GAAK,UAAxC,SACAL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAY,iBAAgBE,GAAK,SAAvC,iBAPgBK,IAAMC,qCCA3BC,IAASC,YAAc,+FA8CRC,cA1Cb,SAAAA,EAAYC,GAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACxBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,IAAK,QACLC,IAAK,OACLC,KAAM,IALgBV,mFASN,IAAAW,EAAAR,KAAAS,EACST,KAAKI,MAAxBC,EADUI,EACVJ,IAAKC,EADKG,EACLH,IAAKC,EADAE,EACAF,KAEZG,EAAM,IAAIjB,IAASkB,IAAI,CAC3BC,UAAWZ,KAAKa,aAChB1B,MAAO,oCACP2B,OAAQ,CAACT,EAAKC,GACdC,SAGFG,EAAIK,GAAG,OAAQ,WAAM,IAAAC,EACEN,EAAIO,YAAjBZ,EADWW,EACXX,IAAKC,EADMU,EACNV,IAEbE,EAAKU,SAAS,CACZb,IAAKA,EAAIc,QAAQ,GACjBb,IAAKA,EAAIa,QAAQ,GACjBZ,KAAMG,EAAIU,UAAUD,QAAQ,wCAKzB,IAAAE,EAAArB,KAAAsB,EACoBtB,KAAKI,MAAxBC,EADDiB,EACCjB,IAAKC,EADNgB,EACMhB,IAAKC,EADXe,EACWf,KAElB,OACC1B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKwC,IAAK,SAAAC,GAAE,OAAIH,EAAKR,aAAeW,GAAIxC,UAAU,QAClDH,EAAAC,EAAAC,cAAA,yBAAA0C,OAAoBpB,EAApB,eAAAoB,OAAqCnB,EAArC,WAAAmB,OAAkDlB,YAtChChB,IAAMC,WCWlBkC,mLAVb,OACC7C,EAAAC,EAAAC,cAAA,OAAKC,UAAY,mBAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SAAjB,kBACAH,EAAAC,EAAAC,cAAC4C,EAAD,cALqBpC,IAAMC,WCShBoC,mLATb,OACC/C,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,2BAJeQ,IAAMC,WCWVqC,mLATb,OACChD,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,4BAJgBQ,IAAMC,WCcXsC,mLAZb,OACCjD,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,WAAMiB,KAAKJ,MAAMjB,MAAMoD,OAAOC,MAC9BnD,EAAAC,EAAAC,cAAA,WAAMiB,KAAKJ,MAAMjB,MAAMoD,OAAOzC,KAC9BT,EAAAC,EAAAC,cAAA,WAAMiB,KAAKJ,MAAMjB,MAAMoD,OAAOE,OAC9BpD,EAAAC,EAAAC,cAAA,WAAMiB,KAAKJ,MAAMjB,MAAMoD,OAAO3C,gBAPfG,IAAMC,iBCSzB0C,IAASC,OACTtD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACCvD,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WAChBH,EAAAC,EAAAC,cAACsD,EAAD,MACAxD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAQC,YAA8BC,UAAahB,IAChE7C,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAQC,gBAAkCC,UAAad,IACpE/C,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAQC,iBAAmCC,UAAab,IACrEhD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAQC,8CAAgEC,UAAaZ,MAGjGa,SAASC,eAAe,SP2GrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.640de0bc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../scss/navbar.scss\";\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className = 'navbar-wrapper'>\n\t\t\t\t<div className = 'navbar-logo'><Link to = '/'><img style={{height: 40}} src='./image/logo.svg' alt='Infomap Logo' /></Link></div>\n\t\t\t\t<div className = 'navbar-tabs'>\n\t\t\t\t\t<Link className = 'navbar-tabitem' to = '/about'>About</Link>\n\t\t\t\t\t<Link className = 'navbar-tabitem'to = '/help'>Help</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport mapboxgl from 'mapbox-gl'\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoid2NuZGhyIiwiYSI6ImNqa2h6MHdpZDB6a3gzcG1sZjAzcWRqd2QifQ.QhiUrYs_tD0qN2SiN5bvUg';\n\nclass MapSelection extends React.Component {\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      lng: 11.5752,\n      lat: 48.1370,\n      zoom: 16\n    };\n  }\n\n  componentDidMount() {\n    const { lng, lat, zoom } = this.state;\n\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v9',\n      center: [lng, lat],\n      zoom\n    });\n\n    map.on('move', () => {\n      const { lng, lat } = map.getCenter();\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n  }\n\n  render() {\n    const { lng, lat, zoom } = this.state;\n\n    return (\n    \t<div>\n        \t<div ref={el => this.mapContainer = el} className=\"map\" />\n        \t<div>{`Longitude: ${lng} Latitude: ${lat} Zoom: ${zoom}`}</div>\n    \t</div>\n    );\n  }\n}\n\nexport default MapSelection","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../scss/selectarea.scss'\nimport MapSelection from './MapSelection'\n\nclass SelectArea extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className = 'content-wrapper'>\n\t\t\t\t<div className = 'title'>Select an Area</div>\n\t\t\t\t<MapSelection/>\n\t\t\t\t{/*TODO*/}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SelectArea;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Help extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>Help</div>\n\t\t\t\t{/*TODO*/}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Help;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass About extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>About</div>\n\t\t\t\t{/*TODO*/}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default About;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Maps extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>{this.props.match.params.long}</div>\n\t\t\t\t<div>{this.props.match.params.alt}</div>\n\t\t\t\t<div>{this.props.match.params.width}</div>\n\t\t\t\t<div>{this.props.match.params.height}</div>\n\t\t\t\t{/*TODO*/}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Maps;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Header from './modules/Header';\nimport SelectArea from './modules/SelectArea';\nimport Help from './modules/Help';\nimport About from './modules/About';\nimport Maps from './modules/Maps';\nimport './scss/base.scss';\n\n\nReactDOM.render((\n<Router>\n\t<div className = 'content'>\n\t\t<Header/>\n\t\t<Route exact path = {process.env.PUBLIC_URL + '/'} component = {SelectArea} />\n\t\t<Route exact path = {process.env.PUBLIC_URL + '/help'} component = {Help} />\n\t\t<Route exact path = {process.env.PUBLIC_URL + '/about'} component = {About} />\n\t\t<Route exact path = {process.env.PUBLIC_URL + '/selected/:long/:alt/:width/:height'} component = {Maps}/>\n\t</div>\n</Router>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}